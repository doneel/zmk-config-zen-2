#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_fd_esc {
            timeout-ms = <50>;
            key-positions = <16 15>;
            bindings = <&kp ESC>;
        };
    };
};

/ {
    behaviors {
        
        tdcapsword: tap_dance_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&caps_word>;
        };

        underscorePipe: underscore_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDERSCORE_PIPE";
            #binding-cells = <0>;
            bindings = <&kp UNDER>, <&kp PIPE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        qlt: quick-layer-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK-LAYER-TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <180>;
            quick-tap-ms = <125>;
            bindings = <&mo>, <&kp>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// DEFAULT
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |   -  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

//                         bindings = <
//   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
//   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
//   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp MINUS
//                  &kp BSPC &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
//                        >;


// -----------------------------------------------------------------------------------------
// |  `   |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   =  |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  -   |
//                    | BKSP | SHFT | GUI |   | ENT | SPC  | CTRL |
                        bindings = <
   &kp GRAVE &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp EQUAL
   &kp TAB   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp MINUS
                  &kp BSPC  &tdcapsword &kp LGUI   &qlt 1 RET &qlt 2 SPACE &kp RCTRL
                        >;
                };
                lower_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2    |  3    |  4    |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2   | BT3   | BT4   | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     | VM_M  | VM_DN | VM_UP |     |   |     |     |     |     |     |      |
//                    | ALT BCK |     | ALT |   |     |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &kp LA(BSPC) &kp LSHIFT   &kp LALT       &trans  &trans   &kp RALT
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |   $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  +   |
// | PG_UP |     |     |     |      | TAB |   |     |  {  |  }  |  [  |  ]  |  \   |
// | PG_DN |     |     |     |      | ESC |   |  _  |  +  |  {  |  }  | \   | "|" |
//                    | GUI | SHFT | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR   &kp RPAR &kp PLUS
   &kp PG_UP &trans   &trans &trans   &trans   &kp TAB     &trans    &kp LBRC  &kp RBRC        &kp LBKT   &kp RBKT &kp BSLH 
   &kp PG_DN &trans   &trans &trans   &trans   &kp ESC     &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC   &kp BSLH &kp PIPE
                    	     &kp LGUI &kp LSHIFT   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                fn_layer {
                        label = "FUNCTION";
// -----------------------------------------------------------------------------------------
// |  ~     |  !  |  @    |  #    |   $   |  %  |   |  ^  |  &  |  *  |  (  |  )  |  +   |
// | BTCLR  | BT1 | BT2   | BT3   | BT4   | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | PG_DN  |     | VM_M  | VM_DN | VM_UP | ESC |   |  _  |  +  |  {  |  }  | "|" | _"|" |
//                    | GUI | SHFT | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TILDE  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT     &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR   &kp RPAR &kp PLUS
   &bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp LEFT  &kp DOWN  &kp UP          &kp RIGHT &trans &trans
   &kp PG_DN  &trans        &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &kp ESC       &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC   &kp PIPE &underscorePipe
                	    &kp LGUI &kp LSHIFT   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };


        };
};
